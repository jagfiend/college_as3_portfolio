package classes.game // class draws explosion graphic based on values passed in from specific explosion type child classes...{	// import libraries...	import flash.display.MovieClip;	import flash.events.Event; 	import flash.filters.BitmapFilterQuality;	import flash.filters.BlurFilter;	import flash.filters.GlowFilter;	// class code...		public class DrawExplosion extends MovieClip	{		// class variables...		protected var _game:Game;		// explosion variables..		protected var explosion:MovieClip;		protected var explosionCounter:Number = 0;		public var removeMe:Boolean; // flag to indicate when to call function to remove explosion...		private var explosionColour:uint;		private var explosionSize:int;		// blur variables...		protected var blur:BlurFilter = new BlurFilter();		private var blurLevel:int;		// glow variables...		protected var glow:GlowFilter = new GlowFilter();		private var glowColour:uint;		private var glowBlurLevel:int;				protected var size:Number = 0; // sets base radius of explosion...		// class functions...		public function DrawExplosion(game:Game, size:int, colour:uint, blurAmount:int, glowColour:uint, glowBlur:int) 		{			explosionSize = size;			explosionColour = colour;			this.blurLevel = blurAmount;			this.glowColour = glowColour;			this.glowBlurLevel = glowBlur;			// constructor code...			_game = game;			// code for instantiating explosion...			explosion = new MovieClip();			addChild(explosion);			addEventListener(Event.ENTER_FRAME, explosionListener)			// code to define explosion blur...			blur.blurX = blurLevel;			blur.blurY = blurLevel;			blur.quality = BitmapFilterQuality.HIGH;			// code to define glow around explosion...			glow.color = glowColour; 			glow.alpha = 1; 			glow.blurX = glowBlurLevel; 			glow.blurY = glowBlurLevel; 			glow.quality = BitmapFilterQuality.HIGH;		} // end of functions...				private function explosionListener(e:Event):void		{			if(_game._isPaused) return; // jumps out of function...			explosionCounter++;			drawExplosion();		} 				protected function drawExplosion():void		{			if(explosionCounter <= 30){				// code to expand explosion, takes one second at 30 fps				size += 2.5;			} else if(explosionCounter <= 60){				// code to maintain explosion size, holds for one second at 30 fps				size = 75;			} else if(explosionCounter <= 89){				// code to shrink explosion, takes one second at 30 fps				size -= 2.5;			} else if(explosionCounter >= 90){				// code to set removal flag...				size = 0;				removeMe = true;				removeEventListener(Event.ENTER_FRAME, explosionListener)			}			explosion.graphics.clear(); // removes previous graphic from previous frame...			explosion.filters = []; // clears any miscellaneous lurking filters...			explosion.graphics.beginFill(0x111111,1); // fills explosion area defined below...			explosion.graphics.drawCircle(0,0,size); // defines cirle size...			explosion.filters = [blur,glow]; // adds a tasteful glow...		} // end of functions...	} // end of class...} // end of package...